{"version":3,"sources":["reportWebVitals.js","app/constants/index.js","app/pages/common/actions/index.js","app/reducers/gameplay.js","app/reducers/index.js","app/store.js","app/logger.js","app/layouts/DefaultLayout.js","app/pages/tictactoe/components/BoardItem.js","app/pages/tictactoe/components/TicTacToeBoard.js","app/pages/tictactoe/components/ActivityLog.js","app/pages/tictactoe/components/GameHistory.js","app/pages/tictactoe/actions/index.js","app/pages/tictactoe/components/EnterPlayerNameModal.js","app/services/Utility.js","app/pages/tictactoe/components/CongratsModal.js","app/pages/tictactoe/components/GameHistoryModal.js","app/pages/tictactoe/PlayTicTacToe.js","app/index.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","EMPTY_BOARD","CACHED_GAME_HISTORY","SESSIONED_ACTIVE_BOARD","SESSIONED_ACTIVE_ACTIVITY","SESSIONED_PLAYER_ONE","SESSIONED_PLAYER_TWO","BaseBorderColor","useColorModeValue","BASE_BLUE","WHITE","gray_300","yellow_100","BASE_BORDER_WIDTH","getSessionPlayerName","flag","sessionStorage","getItem","initialState","activeBoard","JSON","parse","players","playerOne","name","symbol","playerTwo","currentGameActivities","activePlayer","previousGames","localStorage","appReducers","combineReducers","gameplay","state","action","type","payload","key","value","reducers","middleware","thunk","store","next","console","log","enhancers","compose","applyMiddleware","createStore","rootReducer","DefaultLayout","children","useDisclosure","isOpen","onToggle","bg","color","minH","py","base","px","borderBottom","borderStyle","borderColor","align","flex","md","ml","display","onClick","icon","Close","w","h","Hamburger","variant","aria-label","justify","textAlign","useBreakpointValue","fontFamily","in","animateOpacity","p","DesktopNav","linkColor","linkHoverColor","popoverContentBgColor","direction","spacing","NAV_ITEMS","map","navItem","trigger","placement","href","fontSize","fontWeight","_hover","textDecoration","label","border","boxShadow","rounded","minW","child","DesktopSubNav","subLabel","role","transition","_groupHover","transform","opacity","as","ChevronRightIcon","MobileNav","MobileNavItem","Link","ChevronDownIcon","style","marginTop","mt","pl","borderLeft","BoardItem","onChange","withSuccessBackground","isHistory","height","width","background","cursor","TicTacToeBoard","board","matchedCombinationTiles","templateColumns","borderWidth","row","i","j","length","forEach","tile","ActivityLog","activities","item","player","column","GameHistory","showGameDetails","maxH","overflow","colorScheme","game","createdAt","mr","updatePlayers","data","dispatch","a","updateBoard","setItem","stringify","update","saveGames","saveActivities","checkIfAnyMatchingCombination","verdict","connect","bindActionCreators","onClose","useDispatch","e","temp","target","closeOnOverlayClick","pb","placeholder","playerOneName","playerTwoName","disabled","copyObj","val","getCurrentTimestamp","time","Date","toString","split","toISOString","lastGame","onContinue","GameHistoryModal","useState","finalBoard","setBoard","setActivities","showReplay","setShowReplay","replayStepCounter","setReplayStepCounter","closeModal","useEffect","timer","setInterval","mapActivityToBoard","clearInterval","replay","slice","size","pr","showPlayerNameEntryModal","setShowPlayerNameEntryModal","showCongratsModal","setShowCongratsModal","showGameHistory","setShowGameHistory","selectedGameHistory","setSelectedGameHistory","onChangeBoard","activity","checkResultAndUpdateHistory","result","lastGameDetails","gameId","mb","m","PublicRoute","Component","component","rest","render","matchProps","Root","path","PlayTicTacToe","App","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.030151a4.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { useColorModeValue } from '@chakra-ui/react';\n\nexport const EMPTY_BOARD = [[0,0,0],[0,0,0],[0,0,0]];\n\nexport const BASE_URL = \"https://www.google.com\";\nexport const CACHED_GAME_HISTORY = 'gameHistoryList';\nexport const SESSIONED_ACTIVE_BOARD = 'activeBoard';\nexport const SESSIONED_ACTIVE_ACTIVITY = 'activeActivity';\nexport const SESSIONED_PLAYER_ONE = 'playerOneName';\nexport const SESSIONED_PLAYER_TWO = 'playerTwoName';\n\nexport const BaseBorderColor = () => useColorModeValue('green.100', 'green.900');\nexport const BASE_RED = 'red.500';\nexport const BASE_GREEN = 'green.500';\nexport const BASE_BLUE = 'blue.500';\nexport const BASE_GRAY = 'gray.500';\nexport const WHITE = 'white';\nexport const blue_300 = 'blue.300';\nexport const gray_300 = 'gray.300';\nexport const yellow_100 = 'yellow.100';\n\nexport const BASE_BORDER_WIDTH = '1px';\n","import { CACHED_GAME_HISTORY, SESSIONED_ACTIVE_BOARD, SESSIONED_ACTIVE_ACTIVITY, SESSIONED_PLAYER_ONE, SESSIONED_PLAYER_TWO } from '../../../constants';\n\nexport const getCachedGameHistory = () => {\n  return localStorage.getItem(CACHED_GAME_HISTORY) ? JSON.parse(localStorage.getItem(CACHED_GAME_HISTORY)) : [];\n}\n\nexport const getSessionActiveBoard = () => {\n  return sessionStorage.getItem(SESSIONED_ACTIVE_BOARD) ? JSON.parse(sessionStorage.getItem(SESSIONED_ACTIVE_BOARD)) : [[0, 0, 0], [0, 0, 0], [0, 0, 0]];\n}\n\nexport const getSessionActiveActivity = () => {\n  return sessionStorage.getItem(SESSIONED_ACTIVE_ACTIVITY) ? JSON.parse(sessionStorage.getItem(SESSIONED_ACTIVE_ACTIVITY)) : [];\n}\n\nexport const getSessionPlayerName = (flag) => {\n  if (flag === 1) {\n    return sessionStorage.getItem(SESSIONED_PLAYER_ONE) ? sessionStorage.getItem(SESSIONED_PLAYER_ONE) : '';\n  }\n  if (flag === 2) {\n    return sessionStorage.getItem(SESSIONED_PLAYER_TWO) ? sessionStorage.getItem(SESSIONED_PLAYER_TWO) : '';\n  }\n}\n\nexport const savePlayerNameInSession = (playerOneName, playerTwoName) => {\n  sessionStorage.setItem(SESSIONED_PLAYER_ONE, playerOneName);\n  sessionStorage.setItem(SESSIONED_PLAYER_TWO, playerTwoName);\n}\n","import { getCachedGameHistory, getSessionActiveBoard, getSessionPlayerName, getSessionActiveActivity } from '../pages/common/actions';\n\nconst initialState = {\n  activeBoard: getSessionActiveBoard(),\n  players: {\n    playerOne: { //{name, symbol/identity}\n      name: getSessionPlayerName(1),\n      symbol: 1\n    },\n    playerTwo: {\n      name: getSessionPlayerName(2),\n      symbol: 2\n    },\n  },\n  currentGameActivities: getSessionActiveActivity(), //player(obj), row, column\n  activePlayer: 'playerOne',\n  previousGames: getCachedGameHistory(), //{playerOne, playerTwo, currentGameActivities, finalBoard, matchedCombinationTiles: [], verdict}\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case \"SAVE_PLAYER\": {\n      return {\n        ...state,\n        players: action.payload\n      };\n    }\n    case \"SAVE_BOARD\": {\n      return {\n        ...state,\n        activeBoard: action.payload\n      };\n    }\n    case \"SAVE_GAMES\": {\n      return {\n        ...state,\n        previousGames: action.payload\n      };\n    }\n    case \"SAVE_ACTIVITIES\": {\n      return {\n        ...state,\n        currentGameActivities: action.payload\n      };\n    }\n    case \"SAVE\": {\n      return {\n        ...state,\n        [action.payload.key]: action.payload.value\n      };\n    }\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport gameplayReducer from './gameplay';\n\nconst appReducers = combineReducers({\n  gameplay: gameplayReducer\n});\n\nconst reducers = (state,action) =>{\n  return appReducers(state, action)\n}\n\nexport default reducers;\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\nimport logger from './logger';\n\nconst initialState = {};\nconst middleware = [thunk, logger];\nconst enhancers = compose(\n    applyMiddleware(...middleware)\n);\n\nexport default createStore(\n    rootReducer,\n    initialState,\n    enhancers\n);\n","export default store => next => action => {\n    console.log('Logger: ', action);\n    next(action);\n};\n","import React from 'react';\nimport {\n  Box,\n  Flex,\n  Text,\n  IconButton,\n  Stack,\n  Collapse,\n  Icon,\n  Link,\n  Popover,\n  PopoverTrigger,\n  PopoverContent,\n  useColorModeValue,\n  useBreakpointValue,\n  useDisclosure,\n} from '@chakra-ui/react';\nimport {\n  HamburgerIcon,\n  CloseIcon,\n  ChevronDownIcon,\n  ChevronRightIcon,\n} from '@chakra-ui/icons';\n\nexport default function DefaultLayout({children, ...rest}) {\n  const { isOpen, onToggle } = useDisclosure();\n\n  return (\n    <Box>\n      <Flex\n        bg={useColorModeValue('white', 'gray.800')}\n        color={useColorModeValue('gray.600', 'white')}\n        minH={'60px'}\n        py={{ base: 2 }}\n        px={{ base: 4 }}\n        borderBottom={1}\n        borderStyle={'solid'}\n        borderColor={useColorModeValue('gray.200', 'gray.900')}\n        align={'center'}>\n        <Flex\n          flex={{ base: 1, md: 'auto' }}\n          ml={{ base: -2 }}\n          display={{ base: 'flex', md: 'none' }}>\n          <IconButton\n            onClick={onToggle}\n            icon={\n              isOpen ? <CloseIcon w={3} h={3} /> : <HamburgerIcon w={5} h={5} />\n            }\n            variant={'ghost'}\n            aria-label={'Toggle Navigation'}\n          />\n        </Flex>\n        <Flex flex={{ base: 1 }} justify={{ base: 'center', md: 'start' }}>\n          <Text\n            textAlign={useBreakpointValue({ base: 'center', md: 'left' })}\n            fontFamily={'heading'}\n            color={useColorModeValue('gray.800', 'white')}>\n            Tic Tac Toe!\n          </Text>\n\n          <Flex display={{ base: 'none', md: 'flex' }} ml={10}>\n            <DesktopNav />\n          </Flex>\n        </Flex>\n      </Flex>\n\n      <Collapse in={isOpen} animateOpacity>\n        <MobileNav />\n      </Collapse>\n\n      <Box p={4}>\n      {children}\n      </Box>\n    </Box>\n  );\n}\n\nconst DesktopNav = () => {\n  const linkColor = useColorModeValue('gray.600', 'gray.200');\n  const linkHoverColor = useColorModeValue('gray.800', 'white');\n  const popoverContentBgColor = useColorModeValue('white', 'gray.800');\n\n  return (\n    <Stack direction={'row'} spacing={4}>\n      {NAV_ITEMS.map((navItem) => (\n        <Box key={navItem.label}>\n          <Popover trigger={'hover'} placement={'bottom-start'}>\n            <PopoverTrigger>\n              <Link\n                p={2}\n                href={navItem.href ?? '#'}\n                fontSize={'sm'}\n                fontWeight={500}\n                color={linkColor}\n                _hover={{\n                  textDecoration: 'none',\n                  color: linkHoverColor,\n                }}>\n                {navItem.label}\n              </Link>\n            </PopoverTrigger>\n\n            {navItem.children && (\n              <PopoverContent\n                border={0}\n                boxShadow={'xl'}\n                bg={popoverContentBgColor}\n                p={4}\n                rounded={'xl'}\n                minW={'sm'}>\n                <Stack>\n                  {navItem.children.map((child) => (\n                    <DesktopSubNav key={child.label} {...child} />\n                  ))}\n                </Stack>\n              </PopoverContent>\n            )}\n          </Popover>\n        </Box>\n      ))}\n    </Stack>\n  );\n};\n\nconst DesktopSubNav = ({ label, href, subLabel }: NavItem) => {\n  return (\n    <Link\n      href={href}\n      role={'group'}\n      display={'block'}\n      p={2}\n      rounded={'md'}\n      _hover={{ bg: useColorModeValue('pink.50', 'gray.900') }}>\n      <Stack direction={'row'} align={'center'}>\n        <Box>\n          <Text\n            transition={'all .3s ease'}\n            _groupHover={{ color: 'pink.400' }}\n            fontWeight={500}>\n            {label}\n          </Text>\n          <Text fontSize={'sm'}>{subLabel}</Text>\n        </Box>\n        <Flex\n          transition={'all .3s ease'}\n          transform={'translateX(-10px)'}\n          opacity={0}\n          _groupHover={{ opacity: '100%', transform: 'translateX(0)' }}\n          justify={'flex-end'}\n          align={'center'}\n          flex={1}>\n          <Icon color={'pink.400'} w={5} h={5} as={ChevronRightIcon} />\n        </Flex>\n      </Stack>\n    </Link>\n  );\n};\n\nconst MobileNav = () => {\n  return (\n    <Stack\n      bg={useColorModeValue('white', 'gray.800')}\n      p={4}\n      display={{ md: 'none' }}>\n      {NAV_ITEMS.map((navItem) => (\n        <MobileNavItem key={navItem.label} {...navItem} />\n      ))}\n    </Stack>\n  );\n};\n\nconst MobileNavItem = ({ label, children, href }: NavItem) => {\n  const { isOpen, onToggle } = useDisclosure();\n\n  return (\n    <Stack spacing={4} onClick={children && onToggle}>\n      <Flex\n        py={2}\n        as={Link}\n        href={href ?? '#'}\n        justify={'space-between'}\n        align={'center'}\n        _hover={{\n          textDecoration: 'none',\n        }}>\n        <Text\n          fontWeight={600}\n          color={useColorModeValue('gray.600', 'gray.200')}>\n          {label}\n        </Text>\n        {children && (\n          <Icon\n            as={ChevronDownIcon}\n            transition={'all .25s ease-in-out'}\n            transform={isOpen ? 'rotate(180deg)' : ''}\n            w={6}\n            h={6}\n          />\n        )}\n      </Flex>\n\n      <Collapse in={isOpen} animateOpacity style={{ marginTop: '0!important' }}>\n        <Stack\n          mt={2}\n          pl={4}\n          borderLeft={1}\n          borderStyle={'solid'}\n          borderColor={useColorModeValue('gray.200', 'gray.700')}\n          align={'start'}>\n          {children &&\n            children.map((child) => (\n              <Link key={child.label} py={2} href={child.href}>\n                {child.label}\n              </Link>\n            ))}\n        </Stack>\n      </Collapse>\n    </Stack>\n  );\n};\n\ninterface NavItem {\n  label: string;\n  subLabel?: string;\n  children?: Array<NavItem>;\n  href?: string;\n}\n\nconst NAV_ITEMS: Array<NavItem> = [\n  {\n    label: 'Play',\n    href: '/play',\n  },\n];\n","import { Flex, Text } from '@chakra-ui/react';\nimport { CloseIcon } from '@chakra-ui/icons';\nimport { BASE_BORDER_WIDTH, BaseBorderColor, WHITE, yellow_100, gray_300 } from '../../../constants';\n\nexport const BoardItem = ({value, onChange, withSuccessBackground, isHistory}) => {\n  if (value === 1) {\n    return (\n      <Flex align=\"center\" justify=\"center\" height=\"20\" width=\"20\" border={BASE_BORDER_WIDTH} borderColor={BaseBorderColor()} background={withSuccessBackground ? yellow_100 : WHITE}>\n        <Text fontSize=\"60\">O</Text>\n      </Flex>\n    )\n  }\n  if (value === 2) {\n    return (\n      <Flex align=\"center\" justify=\"center\" height=\"20\" width=\"20\" border={BASE_BORDER_WIDTH} borderColor={BaseBorderColor()} background={withSuccessBackground ? yellow_100 : WHITE}>\n        <CloseIcon  w={10} h={10} color=\"red.500\"/>\n      </Flex>\n    )\n  }\n  if (isHistory) {\n    return (\n      <Flex align=\"center\" justify=\"center\" height=\"20\" width=\"20\" bg={gray_300} border={BASE_BORDER_WIDTH} borderColor={BaseBorderColor()}>\n      </Flex>\n    )\n  }\n  return (\n    <Flex align=\"center\" justify=\"center\" height=\"20\" width=\"20\" bg={gray_300} border={BASE_BORDER_WIDTH} borderColor={BaseBorderColor()} cursor={\"pointer\"} onClick={onChange}>\n    </Flex>\n  )\n}\n","import { Grid, Center } from '@chakra-ui/react';\nimport { BoardItem } from './BoardItem';\nimport { BASE_BORDER_WIDTH } from '../../../constants';\n\nexport const TicTacToeBoard = ({board, onChange, matchedCombinationTiles,isHistory}) => {\n  return (\n    <Center>\n      <Grid templateColumns=\"repeat(3, 1fr)\" borderWidth={BASE_BORDER_WIDTH}>\n      {\n        board.map((row, i) => {\n          return row.map((value, j) => {\n            let withSuccessBackground = false;\n            if (matchedCombinationTiles && matchedCombinationTiles.length) {\n              matchedCombinationTiles.forEach((tile) => {\n                if (tile[0] === i && tile[1] === j) {\n                  withSuccessBackground = true;\n                }\n              });\n\n            }\n            return <BoardItem value={value} key={`${i}_${j}`} onChange={() => onChange(i, j)} withSuccessBackground={withSuccessBackground} isHistory={isHistory}/>\n          })\n        })\n      }\n      </Grid>\n    </Center>\n  )\n}\n","import { Text, Box } from '@chakra-ui/react';\nimport { BASE_BLUE, blue_300, BASE_GRAY } from '../../../constants';\n\nexport const ActivityLog = ({ activities }) => {\n  return (\n    <Box>\n    {\n      activities.length ?\n      <Text align=\"center\" fontWeight={800} p={1} color={BASE_BLUE}>Activity Log</Text>\n      : <></>\n    }\n    {\n      activities.map((item, i) => {\n        return (\n          <Text key={`activity_${i}`} align=\"center\" fontWeight={500} p={1} color={i%2 === 1 ? blue_300 : BASE_GRAY}>{`#${i + 1} - ${item.player.name} has chosen row - ${item.row}, column - ${item.column}`}</Text>\n        )\n      })\n    }\n    </Box>\n  )\n}\n","import { Flex, Button, Table, Thead, Tbody, Tr, Th, Td, TableCaption } from '@chakra-ui/react';\nimport { BaseBorderColor } from '../../../constants';\n\nexport const GameHistory = ({previousGames, showGameDetails}) => {\n  return (\n    <Flex flex=\"1\" border=\"1px\" borderColor={BaseBorderColor()} direction=\"column\" maxH=\"800\" overflow='scroll'>\n      <Table variant=\"striped\" colorScheme=\"gray\">\n        <TableCaption>All game history</TableCaption>\n        <Thead>\n          <Tr>\n            <Th>#</Th>\n            <Th>Players</Th>\n            <Th>Played at</Th>\n            <Th>Actions</Th>\n          </Tr>\n        </Thead>\n        <Tbody>\n        {\n          previousGames.map((game, i) => {\n            return (\n              <Tr key={`previousGames_${i}`}>\n                <Td>Game {i + 1}</Td>\n                <Td>{`${game.playerOne.name} VS ${game.playerTwo.name}`}</Td>\n                <Td>{game.createdAt}</Td>\n                <Td><Button mr={5} onClick={() => showGameDetails(game)} colorScheme=\"blue\">View</Button></Td>\n              </Tr>\n            )\n          })\n        }\n        </Tbody>\n      </Table>\n\n    </Flex>\n  )\n}\n","import { CACHED_GAME_HISTORY, SESSIONED_ACTIVE_BOARD, SESSIONED_ACTIVE_ACTIVITY, SESSIONED_PLAYER_ONE, SESSIONED_PLAYER_TWO } from '../../../constants';\n\nexport const updatePlayers = (data) => async (dispatch) => {\n  dispatch({\n\t\ttype: 'SAVE_PLAYER',\n\t\tpayload: data\n\t});\n}\n\nexport const updateBoard = (data) => async (dispatch) => {\n  sessionStorage.setItem(SESSIONED_ACTIVE_BOARD, JSON.stringify(data));\n  dispatch({\n\t\ttype: 'SAVE_BOARD',\n\t\tpayload: data\n\t});\n}\n\nexport const update = (key, value) => async (dispatch) => {\n  dispatch({\n\t\ttype: 'SAVE',\n\t\tpayload: {\n      key, value\n    }\n\t});\n}\n\nexport const saveGames = (data) => async (dispatch) => {\n  localStorage.setItem(CACHED_GAME_HISTORY, JSON.stringify(data));\n  await dispatch({\n\t\ttype: 'SAVE_GAMES',\n\t\tpayload: data\n\t});\n}\n\nexport const saveActivities = (data) => async (dispatch) => {\n  sessionStorage.setItem(SESSIONED_ACTIVE_ACTIVITY, JSON.stringify(data));\n  dispatch({\n\t\ttype: 'SAVE_ACTIVITIES',\n\t\tpayload: data\n\t});\n}\n\nexport const clearSession = () => async (dispatch) => {\n  sessionStorage.setItem(SESSIONED_ACTIVE_BOARD, '');\n  sessionStorage.setItem(SESSIONED_ACTIVE_ACTIVITY, '');\n  sessionStorage.setItem(SESSIONED_PLAYER_ONE, '');\n  sessionStorage.setItem(SESSIONED_PLAYER_TWO, '');\n  dispatch({\n\t\ttype: 'SAVE_ACTIVITIES',\n\t\tpayload: []\n\t});\n  dispatch({\n\t\ttype: 'SAVE_BOARD',\n\t\tpayload: [[0,0,0],[0,0,0],[0,0,0]]\n\t});\n  dispatch({\n\t\ttype: 'SAVE',\n\t\tpayload: {key: 'activePlayer', value: 'playerOne'}\n\t});\n  dispatch({\n\t\ttype: 'SAVE_PLAYER',\n\t\tpayload: {\n      playerOne: { //{name, symbol/identity}\n        name: '',\n        symbol: 1\n      },\n      playerTwo: {\n        name: '',\n        symbol: 2\n      },\n    }\n\t});\n}\n\n/*\n * checkIfAnyMatchingCombination method\n * takes in a board array and check for any combinations which would determine the game result\n*/\nexport const checkIfAnyMatchingCombination = (board) => {\n  if (board[0][0]) {\n    if ((board[0][0] === board[0][1]) && (board[0][0] === board[0][2])) {\n      return ({\n        verdict: board[0][0] === 1 ? 'playerOne' : 'playerTwo',\n        matchedCombinationTiles: [[0,0],[0,1],[0,2]]\n      })\n    }\n    if ((board[0][0] === board[1][0]) && (board[0][0] === board[2][0])) {\n      return ({\n        verdict: board[0][0] === 1 ? 'playerOne' : 'playerTwo',\n        matchedCombinationTiles: [[0,0],[1,0],[2,0]]\n      })\n    }\n    if ((board[0][0] === board[1][1]) && (board[0][0] === board[2][2])) {\n      return ({\n        verdict: board[0][0] === 1 ? 'playerOne' : 'playerTwo',\n        matchedCombinationTiles: [[0,0],[1,1],[2,2]]\n      })\n    }\n  }\n  if (board[0][1]) {\n    if ((board[0][1] === board[1][1]) && (board[0][1] === board[2][1])) {\n      return ({\n        verdict: board[0][1] === 1 ? 'playerOne' : 'playerTwo',\n        matchedCombinationTiles: [[0,1],[1,1],[2,1]]\n      })\n    }\n  }\n  if (board[0][2]) {\n    if ((board[0][2] === board[1][1]) && (board[0][2] === board[2][0])) {\n      return ({\n        verdict: board[0][2] === 1 ? 'playerOne' : 'playerTwo',\n        matchedCombinationTiles: [[0,2],[1,1],[2,0]]\n      })\n    }\n    if ((board[0][2] === board[1][2]) && (board[0][2] === board[2][2])) {\n      return ({\n        verdict: board[0][2] === 1 ? 'playerOne' : 'playerTwo',\n        matchedCombinationTiles: [[0,2],[1,2],[2,2]]\n      })\n    }\n  }\n  if (board[1][0]) {\n    if ((board[1][0] === board[1][1]) && (board[1][0] === board[1][2])) {\n      return ({\n        verdict: board[1][0] === 1 ? 'playerOne' : 'playerTwo',\n        matchedCombinationTiles: [[1,0],[1,1],[1,2]]\n      })\n    }\n  }\n  if (board[2][0]) {\n    if ((board[2][0] === board[2][1]) && (board[2][0] === board[2][2])) {\n      return ({\n        verdict: board[2][0] === 1 ? 'playerOne' : 'playerTwo',\n        matchedCombinationTiles: [[2,0],[2,1],[2,2]]\n      })\n    }\n  }\n  return ({\n    verdict: '',\n    matchedCombinationTiles: []\n  })\n}\n","import {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  Button,\n  FormControl,\n  FormLabel,\n  Input\n} from '@chakra-ui/react';\n\nimport { useDispatch, connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport { updatePlayers } from '../actions';\nimport { savePlayerNameInSession } from '../../common/actions';\n\nconst EnterPlayerNameModal = ({isOpen, onClose, players}) => {\n  const { playerOne, playerTwo } = players;\n  const dispatch = useDispatch();\n\n  const onChange = async(e) => {\n    let temp = {...players};\n    temp[e.target.name].name = e.target.value;\n    await dispatch(updatePlayers(temp));\n  }\n\n  const start = () => {\n    savePlayerNameInSession(playerOne.name, playerTwo.name);\n    onClose();\n  }\n\n  return (\n    <Modal closeOnOverlayClick={false} isOpen={isOpen}>\n      <ModalOverlay />\n      <ModalContent>\n        <ModalHeader>Please insert player names</ModalHeader>\n        <ModalBody pb={6}>\n          <FormControl>\n            <FormLabel>First player (Symbol - O)</FormLabel>\n            <Input placeholder=\"First Player\" name=\"playerOne\" value={playerOne.name} onChange={onChange}/>\n          </FormControl>\n\n          <FormControl mt={4}>\n            <FormLabel>Second player (Symbol - X)</FormLabel>\n            <Input placeholder=\"Second Player\" name=\"playerTwo\" value={playerTwo.name} onChange={onChange}/>\n          </FormControl>\n        </ModalBody>\n\n        <ModalFooter>\n          <Button onClick={start} colorScheme=\"blue\" disabled={!playerOne.name || !playerTwo.name}>\n            Start!\n          </Button>\n        </ModalFooter>\n      </ModalContent>\n    </Modal>\n  )\n}\n\nconst mapStateToProps = (store) => {\n\treturn {\n\t\tplayers: store.gameplay.players\n\t};\n};\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn bindActionCreators(\n\t\t{\n\t\t},\n\t\tdispatch\n\t);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EnterPlayerNameModal);\n","export const copyObj = (val) => {\n    if (val) {\n        return JSON.parse(JSON.stringify(val));\n    }\n    return val;\n}\n\nexport const getCurrentTimestamp = () => {\n    let time = new Date();\n    return new Date(time.toString().split('GMT')[0]+' UTC').toISOString().split('.')[0];\n}\n","import {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalFooter,\n  ModalBody,\n  Button,\n  Text,\n} from '@chakra-ui/react';\n\nimport { useDispatch, connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport { update, updateBoard, saveActivities } from '../actions';\nimport { EMPTY_BOARD } from '../../../constants';\nimport { copyObj } from '../../../services/Utility';\n\nconst CongratsModal = ({isOpen, onClose, players, previousGames}) => {\n  const lastGame = previousGames.length ? previousGames[previousGames.length - 1] : {};\n  const dispatch = useDispatch();\n\n  const onContinue = async() => {\n    await dispatch(saveActivities([]));\n    await dispatch(updateBoard(copyObj(EMPTY_BOARD)));\n    if (lastGame.activities.length) {\n      let activePlayer = lastGame.activities[0].player.symbol === 1 ? 'playerTwo' : 'playerOne';\n      dispatch(update('activePlayer', activePlayer));\n    }\n    onClose();\n  }\n\n  return (\n    <Modal closeOnOverlayClick={false} isOpen={isOpen}>\n      <ModalOverlay />\n      <ModalContent>\n        <ModalBody pb={6}>\n        {\n          lastGame.verdict === 'draw' ?\n          <Text align=\"center\" fontWeight={900} fontSize='xl'>Match drawn :(</Text>\n          :\n          <Text align=\"center\" fontWeight={900} fontSize='xl' color='green.400'>Congrats {lastGame.verdict ? players[lastGame.verdict].name : ''}!</Text>\n        }\n        </ModalBody>\n\n        <ModalFooter>\n          <Button onClick={onContinue} colorScheme=\"blue\">\n            Play again?\n          </Button>\n        </ModalFooter>\n      </ModalContent>\n    </Modal>\n  )\n}\n\nconst mapStateToProps = (store) => {\n\treturn {\n\t\tplayers: store.gameplay.players,\n    previousGames: store.gameplay.previousGames\n\t};\n};\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn bindActionCreators(\n\t\t{\n\t\t},\n\t\tdispatch\n\t);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CongratsModal);\n","import React, { useEffect, useState } from 'react';\nimport {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  Button,\n  Text,\n  Flex,\n  Box\n} from '@chakra-ui/react';\n\nimport { TicTacToeBoard } from './TicTacToeBoard';\nimport { ActivityLog } from './ActivityLog';\n\nimport { EMPTY_BOARD } from '../../../constants';\nimport { copyObj } from '../../../services/Utility';\n\nexport default function GameHistoryModal({isOpen, onClose, game}) {\n  let [board, setBoard] = useState(game.finalBoard);\n  let [activities, setActivities] = useState(game.activities);\n  let [showReplay, setShowReplay] = useState(false);\n  let [replayStepCounter, setReplayStepCounter] = useState(0);\n\n  const closeModal = () => {\n    setShowReplay(false);\n    setReplayStepCounter(0);\n    onClose();\n  };\n\n  useEffect(() => {\n    setBoard(game.finalBoard);\n    setActivities(game.activities);\n  }, [game])\n\n  useEffect(() => {\n    let timer = null;\n    if (showReplay) {\n      timer = setInterval(() => {\n        if (replayStepCounter < game.activities.length) {\n          mapActivityToBoard(game.activities);\n          setReplayStepCounter(replayStepCounter + 1);\n        } else {\n          clearInterval(timer);\n          setShowReplay(false);\n        }\n      }, 1300);\n    } else {\n      setReplayStepCounter(0);\n      setBoard(game.finalBoard);\n      setActivities(game.activities);\n    }\n    return () => clearInterval(timer);\n  }, [showReplay, replayStepCounter]);\n\n  const replay = async() => {\n    await setBoard(copyObj(EMPTY_BOARD));\n    await setActivities([]);\n    await setReplayStepCounter(0);\n    await setShowReplay(true);\n  };\n\n  /*\n   * mapActivityToBoard methods\n   * needed for the replay. takes in the activity list and maps activity to board till active step\n  */\n  const mapActivityToBoard = (data) => {\n    let temp = copyObj(EMPTY_BOARD);\n    for (let i = 0; i <= replayStepCounter; i++) {\n      temp[data[i].row][data[i].column] = data[i].player.symbol;\n    }\n    setBoard(temp);\n    setActivities(game.activities.slice(0, replayStepCounter + 1))\n  };\n\n  return (\n    <Modal size='xl' isOpen={isOpen} onClose={closeModal}>\n      <ModalOverlay />\n      <ModalContent>\n        <ModalHeader>Game histoy</ModalHeader>\n        <ModalCloseButton  onClick={closeModal}/>\n        <ModalBody pb={6}>\n          <Text pr=\"5\" fontWeight=\"900\">Result: {game.verdict === `draw` ? `Match drawn` : `${game[game.verdict].name} won the match!`}</Text>\n          <Flex justify=\"space-between\" align=\"center\">\n            <TicTacToeBoard board={board} matchedCombinationTiles={game.matchedCombinationTiles} isHistory={true}/>\n            <Box width=\"5\"/>\n            <ActivityLog activities={activities} />\n          </Flex>\n        </ModalBody>\n\n        <ModalFooter>\n          <Button onClick={replay} colorScheme=\"blue\" disabled={showReplay}>\n            Show Replay\n          </Button>\n        </ModalFooter>\n      </ModalContent>\n    </Modal>\n  )\n}\n","import React, { useEffect, useState } from 'react';\nimport { Flex, Text, Box, Button } from '@chakra-ui/react';\nimport { useDispatch, connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport { TicTacToeBoard } from './components/TicTacToeBoard';\nimport { ActivityLog } from './components/ActivityLog';\nimport { GameHistory } from './components/GameHistory';\nimport EnterPlayerNameModal from './components/EnterPlayerNameModal';\nimport CongratsModal from './components/CongratsModal';\nimport GameHistoryModal from './components/GameHistoryModal';\n\nimport { update, updateBoard, checkIfAnyMatchingCombination, saveGames, saveActivities, clearSession } from './actions';\nimport { copyObj, getCurrentTimestamp } from '../../services/Utility';\nimport { BaseBorderColor, BASE_RED, BASE_BLUE, BASE_GREEN } from '../../constants';\n\nfunction PlayTicTacToe ({players, activeBoard, currentGameActivities, activePlayer, previousGames}) {\n  const [showPlayerNameEntryModal, setShowPlayerNameEntryModal] = useState(true);\n  const [showCongratsModal, setShowCongratsModal] = useState(false);\n  const [showGameHistory, setShowGameHistory] = useState(false);\n  const [selectedGameHistory, setSelectedGameHistory] = useState(null);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    /*\n     * checks and sets current active player.\n    */\n    if (currentGameActivities.length) {\n      if (currentGameActivities[currentGameActivities.length - 1].player.symbol === 1) {\n        dispatch(update('activePlayer', 'playerTwo'));\n      } else {\n        dispatch(update('activePlayer', 'playerOne'));\n      }\n    }\n    \n    if (players.playerOne.name && players.playerTwo.name) {\n      setShowPlayerNameEntryModal(false);\n    }\n  }, []);\n\n  /*\n   * onChangeBoard method\n   * this methods updates the active board and also update activities. also calls the resultChecking method\n  */\n  const onChangeBoard = async(row, column) => {\n    let board = [...activeBoard];\n    board[row][column] = activePlayer === 'playerOne' ? 1 : 2;\n    await dispatch(update('activePlayer', activePlayer === 'playerOne' ? 'playerTwo' : 'playerOne'));\n    await dispatch(updateBoard(board));\n    let activity = {\n      player: players[activePlayer],\n      row, column\n    }\n    let activities = [...currentGameActivities, activity];\n    await dispatch(saveActivities(activities));\n    checkResultAndUpdateHistory(activities);\n  }\n\n  /*\n   * checkResultAndUpdateHistory method\n   * this methods checks current active board for existing pattern.\n   * if there is pattern/all 9 steps are done then it will finish the game and save it to history\n  */\n  const checkResultAndUpdateHistory = async(activities) => {\n    let result = checkIfAnyMatchingCombination(activeBoard);\n    if (result.verdict || activities.length === 9) {\n      let lastGameDetails = {\n        gameId: previousGames.length,\n        playerOne: players.playerOne,\n        playerTwo: players.playerTwo,\n        activities: copyObj(activities),\n        finalBoard: copyObj(activeBoard),\n        verdict: result.verdict ? result.verdict : 'draw',\n        matchedCombinationTiles: result.matchedCombinationTiles,\n        createdAt: getCurrentTimestamp(),\n      }\n      let temp = [...previousGames, lastGameDetails];\n      await dispatch(saveGames(temp));\n      setShowCongratsModal(true);\n    }\n  }\n\n  const showGameDetails = (game) => {\n    setSelectedGameHistory(game);\n    setShowGameHistory(true);\n  }\n\n  const resetSession = () => {\n    dispatch(clearSession());\n    setShowPlayerNameEntryModal(true);\n  }\n\n  return (\n    <Flex>\n      <Flex flex=\"1\" direction=\"column\" border=\"1px\" borderColor={BaseBorderColor()} mr={5} bg={BaseBorderColor()}>\n        <Text align=\"center\" fontSize={'lg'} fontWeight={900} bg={BaseBorderColor()} p={5} px={3} color={BASE_GREEN}>\n          -----------Board-----------\n        </Text>\n        {\n          !showPlayerNameEntryModal ?\n          <Text align=\"center\" fontSize={'lg'} fontWeight={900} pb=\"8\" px={3} color={BASE_BLUE}>\n          {`${players.playerOne.name} VS ${players.playerTwo.name}`}\n          </Text> : <></>\n        }\n\n        <TicTacToeBoard board={activeBoard} onChange={onChangeBoard} />\n\n        {\n          !showPlayerNameEntryModal && !showCongratsModal ?\n          <Text align=\"center\" fontSize=\"20\" fontWeight={900} p={5} color={BASE_RED}>{`${players[activePlayer].name}'s turn to play`}</Text>\n          :\n          <Box mb={5}/>\n        }\n        <ActivityLog activities={currentGameActivities} />\n        <Button onClick={resetSession} colorScheme=\"blue\" m=\"5\">\n          Reset Session!\n        </Button>\n      </Flex>\n      <GameHistory previousGames={previousGames} showGameDetails={showGameDetails}/>\n      <EnterPlayerNameModal isOpen={showPlayerNameEntryModal} onClose={() => setShowPlayerNameEntryModal(false)}/>\n      <CongratsModal isOpen={showCongratsModal} onClose={() => setShowCongratsModal(false)}/>\n      {selectedGameHistory && <GameHistoryModal isOpen={showGameHistory} onClose={() => setShowGameHistory(false)} game={selectedGameHistory}/>}\n    </Flex>\n\n  )\n}\n\nconst mapStateToProps = (store) => {\n\treturn {\n\t\tplayers: store.gameplay.players,\n    activeBoard: store.gameplay.activeBoard,\n    currentGameActivities: store.gameplay.currentGameActivities,\n    activePlayer: store.gameplay.activePlayer,\n    previousGames: store.gameplay.previousGames\n\t};\n};\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn bindActionCreators(\n\t\t{\n\t\t},\n\t\tdispatch\n\t);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PlayTicTacToe);\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport DefaultLayout from './layouts/DefaultLayout';\n\n// import  {isTokenExpired} from \"./services/Util\";\n\nimport PlayTicTacToe from './pages/tictactoe/PlayTicTacToe';\n\nconst PublicRoute = ({component: Component, ...rest}) => {\n    return (\n        <Route { ...rest } render={ matchProps => (\n            <DefaultLayout>\n                <Component { ...matchProps } />\n            </DefaultLayout>\n        ) }/>\n    );\n};\n\nclass Root extends Component {\n    render() {\n        // const token = JSON.parse(localStorage.getItem('token'));\n        return (\n            <Router>\n                <Switch>\n                  <PublicRoute path=\"/\" component={ PlayTicTacToe }/>\n                </Switch>\n            </Router>\n        );\n    }\n}\n\nexport default Root;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nimport store from './app/store';\nimport Root from './app/index.js';\n\nfunction App() {\n  return (\n    <ChakraProvider>\n        <Root />\n    </ChakraProvider>\n  );\n}\n\nReactDOM.render(\n  <Provider store={ store }>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}